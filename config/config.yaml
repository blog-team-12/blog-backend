es:
  url: http://127.0.0.1:9200
  username: "elastic"
  password: "1234"
  is_console_print: true
mysql:
  host: 127.0.0.1       # 宿主机本地访问 MySQL
  port: 3306
  config: charset=utf8mb4&parseTime=True&loc=Local
  db_name: blog_db
  username: root
  password: root
  max_idle_conns: 10    # 连接池空闲最大连接数
  max_open_conns: 100   # 连接池最大打开连接数
  log_mode: info        # 日志级别
redis:
  address: 127.0.0.1:6379  # 宿主机本地访问 Redis
  password: ""             # Redis 无密码（默认）
  db: 0                    # 使用第 0 个数据库
system:
  host: 0.0.0.0 # 服务监听所有网络接口（外部可通过服务器IP访问）
  port: 8080 # 服务对外暴露的端口号
  env: release # 应用运行环境（release=生产环境；dev=开发环境；test=测试环境等）
  router_prefix: api # API 接口的统一前缀（所有接口路径会以 /api 开头）
  use_multipoint: true # 是否启用“多点”能力（如多客户端连接、多节点通信等场景）
  sessions_secret: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx # Session 加密/签名的密钥（保障会话安全）
  oss_type: local # 对象存储（OSS）类型（local=本地存储；若为 ali/ tencent 则对应云存储）
zap:
  level: info #  日志级别为info：记录应用正常运行信息（如服务启动、接口请求成功），不包含debug调试信息和error错误信息，平衡日志详细度与性能
  filename: log/go_blog.log # 日志文件存储路径及名称：日志会写入项目根目录下的log文件夹，文件名为go_blog.log，便于统一管理和查找
  max_size: 200 # 单个日志文件最大容量为200MB（依赖lumberjack库）：当文件达到200MB时自动切割为旧日志（如go_blog.log.1），避免单文件过大导致查看/备份困难
  max_backups: 30 # 最多保留30个旧日志文件（依赖lumberjack库）：超过30个时自动删除最旧的日志，防止历史日志占用过多磁盘空间
  max_age: 5 # 旧日志文件最多保留5天（依赖lumberjack库）：无论文件是否达到max_backups数量，超过5天的旧日志都会自动清理，控制日志存储周期
  is_console_print: true # 开启控制台日志输出：日志会同时写入文件和打印到终端（如终端窗口），方便开发时实时查看日志，生产环境可设为false仅保留文件日志
# JWT 认证配置
jwt:
  access_token_secret: a8f5f167f44f4964e6c998dee827110c3b2e5a8b5d2f8e4c9a1b3d7f6e0c2a4b  # 访问令牌密钥，用于签名和验证访问令牌
  refresh_token_secret: b9e6e278e55e5a75f7d099eff938221d4c3f6b9c6e3f9f5d0a2c4e8g7f1d3b5c  # 刷新令牌密钥，用于签名和验证刷新令牌
  access_token_expiry_time: 2h   # 访问令牌过期时间，2小时后需要刷新
  refresh_token_expiry_time: 7d  # 刷新令牌过期时间，7天后需要重新登录
  issuer: go_blog system               # JWT 发行者标识，用于标识令牌的发行方

# 文件上传配置
upload:
  size: 20      # 文件上传大小限制，单位MB
  path: uploads # 文件上传保存路径

# 验证码配置
captcha:
  height: 80     # 验证码图片高度，单位像素
  width: 240     # 验证码图片宽度，单位像素
  length: 6      # 验证码字符长度
  max_skew: 0.7  # 字符最大倾斜度，用于增加识别难度
  dot_count: 80  # 干扰点数量，用于防止机器识别

# 邮件发送配置
email:
  host: smtp.qq.com          # SMTP 服务器地址
  port: 465                  # SMTP 服务器端口号
  from: xxx@qq.com           # 发件人邮箱地址
  nickname: 发件人昵称        # 发件人显示名称
  secret: xxxxxxxxxxxxxxxx   # 邮箱授权码或密码
  is_ssl: true              # 是否使用SSL加密连接

# 高德地图API配置
gaode:
  enable: false                           # 是否启用高德地图功能
  key: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx   # 高德地图API密钥